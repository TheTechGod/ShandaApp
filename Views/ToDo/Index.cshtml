@model IEnumerable<ShandaApp.Models.ToDoItem>
@using ShandaApp.Models.Enums

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="mb-0"><i class="bi bi-journal-check me-2"></i>My Tasks</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="bi bi-plus-lg me-1"></i> Add New Task
    </a>
</div>

<table class="table table-hover align-middle">
    <thead>
        <tr>
            <th>Title</th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="date" class="text-decoration-none">
                    Due Date
                </a>
            </th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var daysLeft = item.DueDate.HasValue
            ? (item.DueDate.Value.Date - DateTime.UtcNow.Date).Days
            : int.MaxValue;

            var dueDateClass = item.IsComplete ? "text-success" :
            daysLeft < 0 ? "text-danger" :
            daysLeft == 0 ? "text-warning" : "";

            <tr>
                <td>@item.Title</td>

                <td class="@dueDateClass">
                    @if (item.DueDate.HasValue)
                    {
                        @item.DueDate.Value.ToString("MM/dd/yyyy")

                        if (item.IsComplete)
                        {
                            <span class="badge bg-success ms-2">Completed</span>
                        }
                        else if (daysLeft < 0)
                        {
                            <span class="badge bg-danger ms-2">Overdue</span>
                        }
                        else if (daysLeft == 0)
                        {
                            <span class="badge bg-warning text-dark ms-2">Today</span>
                        }
                        else
                        {
                            <span class="badge bg-info text-dark ms-2">@daysLeft days left</span>
                        }
                    }

                    else
                    {
                        <span class="text-muted">—</span>
                    }
                </td>

                <td>
                    <form asp-action="UpdateStatus" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@item.Id" />
                        <select name="status" class="form-select form-select-sm" onchange="this.form.submit()">
                            @foreach (ToDoTaskStatus status in Enum.GetValues(typeof(ToDoTaskStatus)))
                            {
                                <option value="@status" selected="@(item.Status == status)">
                                    @status
                                </option>
                            }
                        </select>
                    </form>
                </td>

                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info text-white me-1">View</a>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning me-1">Edit</a>
                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
